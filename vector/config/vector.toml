# 1. HTTP источник для приема логов
[sources.http_logs]
type = "http"
address = "0.0.0.0:8686"
encoding = "json"

# 2. Обработка HTTP логов
[transforms.http_enrich]
type = "remap"
inputs = ["http_logs"]
source = '''
  .source = "http_api"
  .ingest_time = now()
  .received_from = .host
  if exists(.timestamp) {
    .timestamp = parse_timestamp!(.timestamp, format: "%+")
  } else {
    .timestamp = now()
  }
  if !exists(.level) { .level = "INFO" }
  if !exists(.source) { .source = "unknown" }
'''

# 3. Файловый источник
[sources.file_logs]
type = "file"
include = ["/var/log/*.log"]
read_from = "beginning"
ignore_older_secs = 86400

[transforms.file_enrich]
type = "remap"
inputs = ["file_logs"]
source = '''
  .source = "file"
  .ingest_time = now()
  .timestamp = format_timestamp!(now(), format: "%+")
'''

# 4. Объединяем все источники (ИСПРАВЛЕНО)
[transforms.merge_logs]
type = "remap"  # ← ЗДЕСЬ ИСПРАВЛЕНИЕ!
inputs = ["http_enrich", "file_enrich"]
source = '''
  # Просто передаем данные дальше
  .
'''

# 5. Отправляем в OpenSearch
[sinks.opensearch]
type = "elasticsearch"
inputs = ["merge_logs"]
endpoints = ["https://opensearch-node1:9201"]
auth.strategy = "basic"
auth.user = "admin"
auth.password = "GregoTeam#69!8--"
tls.verify_certificate = false

suppress_type_name = true

mode = "bulk"
[sinks.opensearch.bulk]
index = "app-logs-%Y.%m.%d"
action = "create"

# 6. Для отладки
[sinks.console]
type = "console"
inputs = ["merge_logs"]
encoding.codec = "json"